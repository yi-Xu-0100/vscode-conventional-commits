name: release

on:
  workflow_dispatch:

jobs:
  run:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Setup package
        run: yarn install

      - name: Bump version
        run: |
          yarn standard-version --skip.commit --skip.tag
          sed 's/^### \[/## [/' -i CHANGELOG.md
          yarn prettier --write CHANGELOG.md  --prose-wrap never --ignore-path ./gitignore

      - name: Get version from package.json
        uses: actions/github-script@v3.1.0
        id: version
        with:
          result-encoding: string
          script: |
            const version = require(`${process.env.GITHUB_WORKSPACE}/package.json`).version;
            core.setOutput('repo', context.repo.repo);
            core.setOutput('version', version);

      - name: Push commit
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore(release): :bookmark: release v${{steps.version.outputs.version}}"
          git push "https://x-access-token:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git"
          echo "::set-output name=target_hash::$(git rev-parse HEAD)"

      # - name: Publish package
      #   env:
      #     VSCE_PAT: ${{ secrets.VSCE_PAT }}
      #   run: yarn run deploy

      - name: Build release asset
        run: yarn run build

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2.0.0
        with:
          version: ${{steps.version.outputs.version}}
          path: ./CHANGELOG.md

      - name: Create release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: v${{steps.version.outputs.version}}
          release_name: Release v${{steps.version.outputs.version}}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease:
            ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ./${{steps.version.outputs.repo}}-${{steps.version.outputs.version}}.vsix
          asset_name: ${{steps.version.outputs.repo}}-${{steps.version.outputs.version}}.vsix
          asset_content_type: application/octet-stream
